# Generated by Django 4.1.7 on 2023-03-24 01:30

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('external_url', models.CharField(blank=True, help_text='The external URL of the author. This is only used for remote authors. Internal authors will have this field set to null. This field should NOT be set manually.', max_length=100, null=True, verbose_name='External URL')),
                ('display_name', models.CharField(max_length=100)),
                ('github', models.URLField(blank=True, help_text="The URL of the author's GitHub profile. This must be in proper form (e.g. https://github.com/abramhindle).", null=True, validators=[django.core.validators.URLValidator], verbose_name='GitHub URL')),
                ('profile_image', models.URLField(blank=True, help_text="The URL of the author's profile image. This must be in proper form (e.g. https://example.com/image.png).", null=True, validators=[django.core.validators.URLValidator], verbose_name='Profile Image URL')),
                ('is_admin', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.CharField(max_length=1000)),
                ('content_type', models.CharField(choices=[('text/plain', 'Text'), ('text/markdown', 'Md')], max_length=50)),
                ('published', models.DateTimeField(auto_now_add=True)),
                ('external_url', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator])),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quickcomm.author')),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(help_text='The URL of the host API. This must be in proper form (e.g. https://example.com/).', validators=[django.core.validators.URLValidator], verbose_name='Host URL')),
                ('username_password_base64', models.CharField(blank=True, help_text="The username and password to use to authenticate to the host. This is a base64 encoded string of the form 'username:password'.", max_length=100, null=True, verbose_name='Username and Password')),
                ('last_successful_ping', models.DateTimeField(blank=True, null=True)),
                ('last_ping', models.DateTimeField(blank=True, null=True)),
                ('last_ping_result', models.BooleanField(blank=True, null=True)),
                ('nickname', models.CharField(blank=True, help_text='The nickname of the host. This is only used for display purposes.', max_length=100, null=True, verbose_name='Nickname')),
            ],
        ),
        migrations.CreateModel(
            name='HostAuthenticator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(help_text='The username to use to authenticate to the host.', max_length=100, verbose_name='Username')),
                ('password', models.CharField(help_text='The password to use to authenticate to the host.', max_length=100, verbose_name='Password')),
                ('nickname', models.CharField(blank=True, help_text='The nickname of the host authenticator. This is only used for display purposes.', max_length=100, null=True, verbose_name='Nickname')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('source', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator])),
                ('origin', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator])),
                ('description', models.CharField(max_length=1000)),
                ('content_type', models.CharField(choices=[('text/plain', 'Text'), ('text/markdown', 'Md'), ('image/png;base64', 'Png'), ('image/jpeg;base64', 'Jpg'), ('application/base64', 'App')], max_length=50)),
                ('content', models.CharField(max_length=10000)),
                ('categories', models.CharField(max_length=1000)),
                ('published', models.DateTimeField(auto_now_add=True)),
                ('visibility', models.CharField(choices=[('PUBLIC', 'Public'), ('FRIENDS', 'Friends')], max_length=50)),
                ('unlisted', models.BooleanField(default=False)),
                ('external_url', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator])),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quickcomm.author')),
            ],
        ),
        migrations.CreateModel(
            name='RawInboxItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('endpoint', models.URLField()),
                ('direction', models.CharField(choices=[('in', 'In'), ('out', 'Out')], max_length=50)),
                ('data', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('are_new_users_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImageFile',
            fields=[
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='quickcomm.post')),
                ('image', models.ImageField(upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quickcomm.author')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quickcomm.post')),
            ],
        ),
        migrations.CreateModel(
            name='Inbox',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('inbox_type', models.CharField(choices=[('post', 'Post'), ('comment', 'Comment'), ('follow', 'Follow'), ('like', 'Like'), ('commentlike', 'Commentlike')], max_length=50)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.UUIDField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quickcomm.author')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower', to='quickcomm.author')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to='quickcomm.author')),
            ],
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quickcomm.author')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quickcomm.comment')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quickcomm.post'),
        ),
        migrations.AddField(
            model_name='author',
            name='host',
            field=models.ForeignKey(blank=True, help_text='The host that this author is associated with. This is only used for remote authors. Internal authors will have this field set to null. This field should NOT be set manually.', null=True, on_delete=django.db.models.deletion.CASCADE, to='quickcomm.host'),
        ),
    ]
